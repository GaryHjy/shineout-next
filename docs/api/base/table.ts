const api = JSON.parse('[{"title":"TableColumn","properties":[{"name":"align","tag":{"cn":"单元格内容排布方式","en":"cell align","default":"\\\"left\\\"","version":""},"required":false,"type":"\\\"left\\\" | \\\"center\\\" | \\\"right\\\""},{"name":"colSpan","tag":{"cn":"合并列控制函数，row为单行数据，返回值一个整数，标明需要合并的列数","en":"The function for controlling to merge columns. The return value is an integer indicating the number of columns that need to be merged。","default":"","version":""},"required":false,"type":"((row: DataItem, index: number) => number) "},{"name":"defaultOrder","tag":{"cn":"默认排序规则","en":"default sort","default":"","version":""},"required":false,"type":"\\\"asc\\\" | \\\"desc\\\" "},{"name":"fixed","tag":{"cn":"固定列,如果相邻的多列需要锁定，只需指定最外侧的 column 即可","en":"Fixed columns. If multiple adjacent columns need to be locked, specify only the outermost column","default":"","version":""},"required":false,"type":"\\\"left\\\" | \\\"right\\\" "},{"name":"group","tag":{"cn":"表头分组，相邻的相同 group 会生成一个新的表头","en":"The group of header column.","default":"","version":""},"required":false,"type":"ReactNode | ReactNode[]"},{"name":"hide","tag":{"cn":"只针对行展开列有效，表示是否隐藏该列","en":"hide the column, only work on row-expand column","default":"","version":""},"required":false,"type":"boolean "},{"name":"key","tag":{"cn":"列的key，默认使用 index","en":"The key of the column","default":"","version":""},"required":false,"type":"string | number "},{"name":"minWidth","tag":{"cn":"最小列宽","en":"min width","default":"","version":""},"required":false,"type":"number "},{"name":"maxWidth","tag":{"cn":"最大可拖动列宽","en":"max width","default":"","version":""},"required":false,"type":"number "},{"name":"filterAll","tag":{"cn":"全选时用来筛除数据，仅当 type=\\\"checkbox\\\" 时有效","en":"Select All to screen data. Valid only if type=\\\"checkbox\\\"","default":"","version":""},"required":false,"type":"((data: DataItem[]) => DataItem[]) "},{"name":"render","tag":{"cn":"表格内容生成函数，返回渲染的内容,  data 当前行的数据，index 当前索引，instance 当 type=\\\"checkbox\\\" 时会传入 Checkbox 实例\\n为了使用方便，可以传入一个数据的key，如 \\\"id\\\"，相当于 (d) => { return d.id }","en":"The generation function for Table content.d: the data of the current row. i: the index of the current row .For ease of use, you can pass in the key of a data, such as \\\"id\\\", which is equivalent to (d) => { return d.id }","default":"","version":""},"required":false,"type":"ObjectKey<DataItem> | function(d, id, instance)"},{"name":"rowSpan","tag":{"cn":"根据函数返回的结果（boolean）判断是否合并行，a、b为相邻的两行数据。","en":"According to the result (boolean) returned by the function to determine whether to merge rows, a and b are two adjacent rows of data","default":"","version":""},"required":false,"type":"((prevRowData: DataItem, nextRowData: DataItem) => boolean) "},{"name":"sorter","tag":{"cn":"sorter 不为空时，这一列会出现排序 icon。order的值为[\\\"asc\\\", \\\"desc\\\"]\\n字符串表示排序依据字段，作为第一个参数传入Table.sorter\\n为 Sorter 对象\\n前端排序，返回一个排序函数，参考 Array.sort。(旧用法)\\n服务端排序，不要返回值，自行处理即可。(旧用法)","en":"When the sorter is not empty, the sort icon appears in this column. the value of order: [\\\"asc\\\", \\\"desc\\\"]\\nIndicate the sort key string, will pass to table sorter method.\\nFront-end sorting returns a sort function, refer to Array.sort.\\nServer-side sorting, do not return values and handle it itself.","default":"","version":""},"required":false,"type":"string | ((order: \\\"asc\\\" | \\\"desc\\\") => void | ((prevRowData: DataItem, nextRowData: DataItem) => number)) | {  rule: string | ((sorter: ({  order: \\\"asc\\\" | \\\"desc\\\", manual: boolean, key: string | number, weight?: number  })[]) => void), weight: number } "},{"name":"title","tag":{"cn":"表头显示内容","en":"The content of the header","default":"","version":""},"required":false,"type":"ReactNode | ((rowData: DataItem[]) => ReactNode)"},{"name":"treeColumnsName","tag":{"cn":"树形表格子数据字段名","en":"tree table children-data name","default":"","version":""},"required":false,"type":"ObjectKey<DataItem> "},{"name":"treeIndent","tag":{"cn":"每一层缩进宽度","en":"indent of each level","default":"25","version":""},"required":false,"type":"number "},{"name":"type","tag":{"cn":"特殊用途列\\nexpand: 行展开列，render 函数返回函数时，表示此行可以展开，内容为此函数返回结果。\\nrow-expand: 同 expand。不同为点击行内空白区域也可以折叠/展开行。\\ncheckbox: 选择列，仅用于固定选择列的场景","en":"Special column\\nexpand: Expand the column. When the render function returns a function, it means that the row can be expanded and the content  is the result returned by this function.\\nrow-expand: Similar to expand. The difference is that clicking on the entire row triggers the expand event.\\ncheckbox: Select column for scenes with only fixed selection columns","default":"","version":""},"required":false,"type":"\\\"expand\\\" | \\\"row-expand\\\" | \\\"checkbox\\\" "},{"name":"width","tag":{"cn":"列宽","en":"width","default":"","version":""},"required":false,"type":"number "},{"name":"className","tag":{"cn":"列对应的类名","en":"classname of column","default":"","version":""},"required":false,"type":"string "},{"name":"style","tag":{"cn":"td 样式","en":"style of td","default":"","version":""},"required":false,"type":"CSSProperties "},{"name":"onClick","tag":{"cn":"列点击事件","en":"Click event of column","default":"","version":""},"required":false,"type":"((d: DataItem, isExpand: boolean) => void) "},{"name":"columnResizable","tag":{"cn":"单独设置某一列不可拖动","en":"Separately set a column not to be draggable","default":"","version":""},"required":false,"type":"false "}],"cn":"","en":""}]');
export default api;
